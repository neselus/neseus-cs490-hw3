{
  "version": 3,
  "sources": ["../../../src/services/adminPosts/adminPosts.js"],
  "sourcesContent": ["import { ForbiddenError } from '@redwoodjs/graphql-server'\n\nimport { db } from 'src/lib/db'\n\nconst verifyOwnership = async ({ id }) => {\n  if (await adminPost({ id })) {\n    return true\n  } else {\n    throw new ForbiddenError(\"You don't have access to this post\")\n  }\n}\n\nexport const adminPosts = () => {\n  return db.post.findMany({ where: { userId: context.currentUser.id } })\n}\n\nexport const adminPost = ({ id }) => {\n  return db.post.findFirst({\n    where: { id, userId: context.currentUser.id },\n  })\n}\n\nexport const createPost = ({ input }) => {\n  return db.post.create({\n    data: { ...input, userId: context.currentUser.id },\n  })\n}\n\nexport const updatePost = async ({ id, input }) => {\n  await verifyOwnership({ id })\n\n  return db.post.update({\n    data: input,\n    where: { id },\n  })\n}\n\nexport const deletePost = async ({ id }) => {\n  await verifyOwnership({ id })\n\n  return db.post.delete({\n    where: { id },\n  })\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;;;;;;;;;4BAA+B;AAE/B,gBAAW;AAEX,MAAMA,kBAAkB,OAAO;EAAEC;AAAG,MAAM;AACxC,MAAI,MAAMC,UAAU;IAAED;EAAG,CAAC,GAAG;AAC3B,WAAO;EACT,OAAO;AACL,UAAM,IAAIE,qCAAe,oCAAoC;EAC/D;AACF;AAEO,MAAMC,aAAaA,MAAM;AAC9B,SAAOC,aAAGC,KAAKC,SAAS;IAAEC,OAAO;MAAEC,QAAQC,8BAAQC,YAAYV;IAAG;EAAE,CAAC;AACvE;AAEO,MAAMC,YAAYA,CAAC;EAAED;AAAG,MAAM;AACnC,SAAOI,aAAGC,KAAKM,UAAU;IACvBJ,OAAO;MAAEP;MAAIQ,QAAQC,8BAAQC,YAAYV;IAAG;EAC9C,CAAC;AACH;AAEO,MAAMY,aAAaA,CAAC;EAAEC;AAAM,MAAM;AACvC,SAAOT,aAAGC,KAAKS,OAAO;IACpBC,MAAM;MAAE,GAAGF;MAAOL,QAAQC,8BAAQC,YAAYV;IAAG;EACnD,CAAC;AACH;AAEO,MAAMgB,aAAa,OAAO;EAAEhB;EAAIa;AAAM,MAAM;AACjD,QAAMd,gBAAgB;IAAEC;EAAG,CAAC;AAE5B,SAAOI,aAAGC,KAAKY,OAAO;IACpBF,MAAMF;IACNN,OAAO;MAAEP;IAAG;EACd,CAAC;AACH;AAEO,MAAMkB,aAAa,OAAO;EAAElB;AAAG,MAAM;AAC1C,QAAMD,gBAAgB;IAAEC;EAAG,CAAC;AAE5B,SAAOI,aAAGC,KAAKc,OAAO;IACpBZ,OAAO;MAAEP;IAAG;EACd,CAAC;AACH;",
  "names": ["verifyOwnership", "id", "adminPost", "ForbiddenError", "adminPosts", "db", "post", "findMany", "where", "userId", "context", "currentUser", "findFirst", "createPost", "input", "create", "data", "updatePost", "update", "deletePost", "delete"]
}
